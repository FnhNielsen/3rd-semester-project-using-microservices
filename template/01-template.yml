stages:
  - build
  - test
  - deliver

# Compile (if needed) here.
compile:
  stage: build
  script:
    - echo "Compiled"
# Compiled file(s) are temporarily saved, and will appear in the next jobs' containers
  artifacts: 
    paths:
      - compiled.file
    expire_in: 10 minutes

# test-image is built and stored in the project registry
build_test_image:
  dependencies: 
    - compile
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
  # This refers to a Dockerfile in the root of the project. To add more, make several folders with Dockerfiles, 
  # or name them differently and include that in the build command.
    - docker build -t "$CI_REGISTRY_IMAGE/name-test:latest" .
    - docker push "$CI_REGISTRY_IMAGE/name-test:latest"

unit-tests:
  stage: test
  image: "$CI_REGISTRY_IMAGE/name:latest"
  script:
    - echo "run test in test image"
    - echo "run other test in test image"

acceptance-tests:
  stage: test
  dependencies:
    - unit-tests
  script:
    - echo "run some test"

integration-tests:
  stage: test
  dependencies:
    - acceptance-tests
  script:
