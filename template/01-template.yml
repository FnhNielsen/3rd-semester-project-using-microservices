.default_rules:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" &&$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =="main"'
      when: always

.default_rules_push:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =="main"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "test-merge-into"'
      when: always

stages:
  - build
  - test
  - deliver
  - cleanup

# Compile (if needed) here.
compile:
  stage: build
  script:
    - echo "Compiled"
# Compiled file(s) are temporarily saved, and will appear in the next jobs' containers
  artifacts: 
    paths:
      - compiled.file
    expire_in: 10 minutes
  extends: .default_rules

# test-image is built and stored in the project registry
build_test_image:
  dependencies: 
    - compile
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
  # This refers to a Dockerfile in the root of the project. To add more, make several folders with Dockerfiles,
  # or name them differently and include that in the build command.
    - docker build -t "$CI_REGISTRY_IMAGE/name-test:latest" .
    - docker push "$CI_REGISTRY_IMAGE/name-test:latest"
  extends: .default_rules

unit-tests:
  stage: test
  image: "$CI_REGISTRY_IMAGE/name:latest"
  script:
    - echo "run test in test image"
    - echo "run other test in test image"
  extends: .default_rules_push

acceptance-tests:
  stage: test
  dependencies:
    - unit-tests
  script:
    - echo "run some test"
  extends: .default_rules

integration-tests:
  stage: test
  dependencies:
    - acceptance-tests
  script:
    - echo "run acceptance test"
  extends: .default_rules

cleanup_build_job:
  stage: cleanup
  when: on_failure
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add curl
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - curl -L https://github.com/genuinetools/reg/releases/download/v0.13.0/reg-linux-amd64 > /bin/reg
    - chmod +x /bin/reg
  script:
    - curl -u "$CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD" "https://gitlab.com/jwt/auth?account=$CI_REGISTRY_USER&scope=repository:$CI_REGISTRY_IMAGE/test-image:delete&service=container_registry"
    - /bin/reg -d -r $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD rm "$CI_PROJECT_PATH/test-image:${CI_COMMIT_SHA:0:10}"
