include:
  - project: semester-project-e2021/team-12/ci-cd
    ref: v5.0
    file: base_pipeline.yml

##############################
############ JOBS ############
##############################

#Builds mysql image
build:mySQL:
    extends: 
      - .build 
      - .build_image
    variables: 
      - CI_CD_IMAGE_NAME: 'mysql' 
      - CI_CD_PATH: 'MediaAcquisition/Docker/'


#Builds django service image
build:djangoService:
    extends: 
      - .build 
      - .build_image
    variables: 
      - CI_CD_IMAGE_NAME: 'django-service'
      - CI_CD_PATH: 'MediaAcquisition/'


# deliver
deploy:mySQL:
  extends:
    - .deploy
    - .kube
  variables:
    CI_CD_KUBE_FILE: MediaAcquisition/media-acquisition-kubernetes.yaml
    CI_CD_CONTAINER_IMAGES: '[{"container": "t09-mysql", "image": "mysql"}]'

deploy:djangoService:
  extends:
    - .deploy
    - .kube
  variables:
    CI_CD_KUBE_FILE: MediaAcquisition/media-acquisition-kubernetes.yaml
    CI_CD_CONTAINER_IMAGES: '[{"container": "t09-django", "image": "djangoService"}]'
  
deploy:status:
  extends:
    - .deploy
    - .rollout_status
    - .merge_request_production
  needs:
      - deploy:mySQL
      - deploy:djangoService
  variables:
    CI_CD_CHECK_STATUS: '[
        {"type": "deployment", "name": "t09-mysql"},
        {"type": "deployment", "name": "t09-django"}]'

deploy:failure:
  extends:
    - .deploy
    - .rollout_fail
    - .on_failure_request_production
  needs:
    - deploy:status
  variables:
      CI_CD_DEPLOYMENT_FILES: "MediaAcquisition/media-acquisition-kubernetes.yaml"

### Post ###
cleanup:mySQL:
  extends:
    - .cleanup_test_image
    - .remove_test_image_if_exist
  variables:
    CI_CD_IMAGE_NAME: mysql

cleanup:djangoService:
  extends:
    - .cleanup_test_image
    - .remove_test_image_if_exist
  variables:
    CI_CD_IMAGE_NAME: django-service